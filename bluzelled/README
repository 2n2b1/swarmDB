Kepler Project

Project Layout
- bluzelle
    |- bluzelle <- gui project
    |- bluzelled <- deamon project
    |- bluzellePOC <- original proof of concept




BUILD INSTRUCTIONS
From the command line:
- clone the project
- checkout the 'cmake' branch
- create a build folder with 'mkdir build'
- cd to the build folder
- execute 'cmake ..' from the build folder, this will generate the Makefile
- execute 'make' from the build folder, this will build the kepler executables
- cd to bluzelle from build to execute './bluzelle' or './bluzelle_test'
- cd to bluzellePoc from build to execute './bluzelle_poc'
- cd to bluzelle from build to execute './bluzelled' or './bluzelled_test'




Linux Specifics:
http://codelite.org/LiteEditor/WxWidgets31Binaries#toc2
http://www.boost.org/doc/libs/1_61_0/more/getting_started/unix-variants.html




QUESTIONS
- contact Rich via richard@bluzelle.com


Unit Tests
cmap_concurrent_insert*             PASS
test_token_balance*                 FAIL
test_token_balance_fail*            PASS
node_tests*
    test_node_death*                PASS
    test_generate_ip_address*
    test_all_nodes_alive*
    test_kill_and_join_all_nodes*
    test_create_node*
    test_create_nodes*
    test_add_nodes*
websocket_services_tests*
    test_service*
    test_services*
    test_ping_service*
    test_no_service*
    test_fix_json_str*
    test_count_nodes_service*
    test_get_max_nodes_service*
test_number_of_nodes_to_create*
cset_concurrent_insert*
cset_find*
cset_remove*
test_wait_for_all_nodes_to_start*
node_manager_tests*
    test_node_manager_constructor*
    test_node_manager_param_constructor*
    test_node_manager_setters_getters*
    test_node_manager_something*





